{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satwi\\\\Documents\\\\zoomclone\\\\frontened\\\\src\\\\pages\\\\VideoMeet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from \"socket.io-client\";\nimport { Badge, IconButton, TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\nimport styles from \"../styles/videoComponent.module.css\";\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport ScreenShareIcon from '@mui/icons-material/ScreenShare';\nimport StopScreenShareIcon from '@mui/icons-material/StopScreenShare';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server = 'http://localhost:8080';\nconst server_url = server;\nvar connections = {};\nconst peerConfigConnections = {\n  \"iceServers\": [{\n    \"urls\": \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport default function VideoMeetComponent() {\n  _s();\n  var socketRef = useRef();\n  let socketIdRef = useRef();\n  let localVideoref = useRef();\n  let [videoAvailable, setVideoAvailable] = useState(true);\n  let [audioAvailable, setAudioAvailable] = useState(true);\n  let [video, setVideo] = useState([]);\n  let [audio, setAudio] = useStatetrue();\n  let [screen, setScreen] = useState();\n  let [showModal, setModal] = useState(true);\n  let [screenAvailable, setScreenAvailable] = useState();\n  let [messages, setMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [newMessages, setNewMessages] = useState(3);\n  let [askForUsername, setAskForUsername] = useState(true);\n  let [username, setUsername] = useState(\"\");\n  const videoRef = useRef([]);\n  let [videos, setVideos] = useState([]);\n\n  // TODO\n  // if(isChrome() === false) {\n\n  // }\n\n  useEffect(() => {\n    console.log(\"HELLO\");\n    getPermissions();\n  });\n  let getDislayMedia = () => {\n    if (screen) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        }).then(getDislayMediaSuccess).then(stream => {}).catch(e => console.log(e));\n      }\n    }\n  };\n  const getPermissions = async () => {\n    try {\n      const videoPermission = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoPermission) {\n        setVideoAvailable(true);\n        console.log('Video permission granted');\n      } else {\n        setVideoAvailable(false);\n        console.log('Video permission denied');\n      }\n      const audioPermission = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      if (audioPermission) {\n        setAudioAvailable(true);\n        console.log('Audio permission granted');\n      } else {\n        setAudioAvailable(false);\n        console.log('Audio permission denied');\n      }\n      if (navigator.mediaDevices.getDisplayMedia) {\n        setScreenAvailable(true);\n      } else {\n        setScreenAvailable(false);\n      }\n      if (videoAvailable || audioAvailable) {\n        const userMediaStream = await navigator.mediaDevices.getUserMedia({\n          video: videoAvailable,\n          audio: audioAvailable\n        });\n        if (userMediaStream) {\n          window.localStream = userMediaStream;\n          if (localVideoref.current) {\n            localVideoref.current.srcObject = userMediaStream;\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (video !== undefined && audio !== undefined) {\n      getUserMedia();\n      console.log(\"SET STATE HAS \", video, audio);\n    }\n  }, [video, audio]);\n  let getMedia = () => {\n    setVideo(videoAvailable);\n    setAudio(audioAvailable);\n    connectToSocketServer();\n  };\n  let getUserMediaSuccess = stream => {\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketIdRef.current) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        console.log(description);\n        connections[id].setLocalDescription(description).then(() => {\n          socketRef.current.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setVideo(false);\n      setAudio(false);\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n      let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n      window.localStream = blackSilence();\n      localVideoref.current.srcObject = window.localStream;\n      for (let id in connections) {\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socketRef.current.emit('signal', id, JSON.stringify({\n              'sdp': connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n    });\n  };\n  let getUserMedia = () => {\n    if (video && videoAvailable || audio && audioAvailable) {\n      navigator.mediaDevices.getUserMedia({\n        video: video,\n        audio: audio\n      }).then(getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n    } else {\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {}\n    }\n  };\n  let getDislayMediaSuccess = stream => {\n    console.log(\"HERE\");\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketIdRef.current) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        connections[id].setLocalDescription(description).then(() => {\n          socketRef.current.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setScreen(false);\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n      let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n      window.localStream = blackSilence();\n      localVideoref.current.srcObject = window.localStream;\n      getUserMedia();\n    });\n  };\n  let gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n    if (fromId !== socketIdRef.current) {\n      if (signal.sdp) {\n        connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n          if (signal.sdp.type === 'offer') {\n            connections[fromId].createAnswer().then(description => {\n              connections[fromId].setLocalDescription(description).then(() => {\n                socketRef.current.emit('signal', fromId, JSON.stringify({\n                  'sdp': connections[fromId].localDescription\n                }));\n              }).catch(e => console.log(e));\n            }).catch(e => console.log(e));\n          }\n        }).catch(e => console.log(e));\n      }\n      if (signal.ice) {\n        connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n      }\n    }\n  };\n  let connectToSocketServer = () => {\n    socketRef.current = io.connect(server_url, {\n      secure: false\n    });\n    socketRef.current.on('signal', gotMessageFromServer);\n    socketRef.current.on('connect', () => {\n      const roomId = \"test-room\"; // Ensure all users use the same room\n      console.log(`Joining room: ${roomId}`);\n      socketRef.current.emit('join-call', roomId);\n      socketIdRef.current = socketRef.current.id;\n      socketRef.current.on('chat-message', addMessage);\n      socketRef.current.on('user-left', id => {\n        console.log(`User ${id} left`);\n        setVideos(videos => videos.filter(video => video.socketId !== id));\n      });\n      socketRef.current.on('user-joined', (id, clients) => {\n        console.log(`User joined: ${id}, Existing clients: `, clients);\n        clients.forEach(socketListId => {\n          if (!connections[socketListId]) {\n            connections[socketListId] = new RTCPeerConnection(peerConfigConnections);\n\n            // ICE Candidate Handling\n            connections[socketListId].onicecandidate = event => {\n              if (event.candidate) {\n                console.log(`Sending ICE candidate to ${socketListId}`);\n                socketRef.current.emit('signal', socketListId, JSON.stringify({\n                  'ice': event.candidate\n                }));\n              }\n            };\n\n            // Handle incoming media stream (Replaces `onaddstream`)\n            connections[socketListId].ontrack = event => {\n              console.log(`Receiving track from: ${socketListId}`);\n              let stream = event.streams[0];\n              setVideos(prevVideos => {\n                const existingVideo = prevVideos.find(v => v.socketId === socketListId);\n                if (!existingVideo) {\n                  return [...prevVideos, {\n                    socketId: socketListId,\n                    stream\n                  }];\n                }\n                return prevVideos;\n              });\n            };\n\n            // Add local stream to connection\n            if (window.localStream) {\n              window.localStream.getTracks().forEach(track => {\n                connections[socketListId].addTrack(track, window.localStream);\n              });\n            }\n          }\n        });\n        if (id === socketIdRef.current) {\n          for (let id2 in connections) {\n            if (id2 === socketIdRef.current) continue;\n            try {\n              window.localStream.getTracks().forEach(track => {\n                connections[id2].addTrack(track, window.localStream);\n              });\n            } catch (e) {\n              console.error(\"Error adding local stream:\", e);\n            }\n\n            // Create and send offer\n            connections[id2].createOffer().then(description => {\n              connections[id2].setLocalDescription(description).then(() => {\n                console.log(`Sending SDP offer to ${id2}`);\n                socketRef.current.emit('signal', id2, JSON.stringify({\n                  'sdp': connections[id2].localDescription\n                }));\n              }).catch(e => console.error(e));\n            }).catch(e => console.error(e));\n          }\n        }\n      });\n    });\n  };\n  let silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], {\n      enabled: false\n    });\n  };\n  let black = ({\n    width = 640,\n    height = 480\n  } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height\n    });\n    canvas.getContext('2d').fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], {\n      enabled: false\n    });\n  };\n  const handleVideo = () => {\n    if (stream) {\n      stream.getVideoTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setVideo(prev => !prev);\n    }\n  };\n  const handleAudio = () => {\n    if (stream) {\n      stream.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setAudio(prev => !prev);\n    }\n  };\n  useEffect(() => {\n    if (screen !== undefined) {\n      getDislayMedia();\n    }\n  }, [screen]);\n  let handleScreen = () => {\n    setScreen(!screen);\n  };\n  let handleEndCall = () => {\n    try {\n      let tracks = localVideoref.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n    } catch (e) {}\n    window.location.href = \"/\";\n  };\n  let openChat = () => {\n    setModal(true);\n    setNewMessages(0);\n  };\n  let closeChat = () => {\n    setModal(false);\n  };\n  let handleMessage = e => {\n    setMessage(e.target.value);\n  };\n  const addMessage = (data, sender, socketIdSender) => {\n    setMessages(prevMessages => [...prevMessages, {\n      sender: sender,\n      data: data\n    }]);\n    if (socketIdSender !== socketIdRef.current) {\n      setNewMessages(prevNewMessages => prevNewMessages + 1);\n    }\n  };\n  let sendMessage = () => {\n    console.log(socketRef.current);\n    console.log(\"Sending message:\", message);\n    socketRef.current.emit('chat-message', message, username);\n    setMessage(\"\");\n\n    // this.setState({ message: \"\", sender: username })\n  };\n  let connect = () => {\n    setAskForUsername(false);\n    getMedia();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: askForUsername === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meetingContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter into Lobby \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoref,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.meetVideoContainer,\n      children: [showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatRoom,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chatContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"black\"\n            },\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chattingDisplay,\n            style: {\n              color: \"black\",\n              backgroundColor: \"white\"\n            },\n            children: messages.length !== 0 ? messages.map((item, index) => {\n              console.log(messages);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"20px\",\n                  color: \"black\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  },\n                  children: item.sender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"black\"\n                  },\n                  children: item.data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 41\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"black\"\n              },\n              children: \"No Messages Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chattingArea,\n            style: {\n              gap: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              id: \"outlined-basic\",\n              label: \"Enter Your chat\",\n              variant: \"outlined\",\n              style: {\n                color: \"black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainers,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleVideo,\n          style: {\n            color: \"white\"\n          },\n          children: video === true ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleEndCall,\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleAudio,\n          style: {\n            color: \"white\"\n          },\n          children: audio === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }, this), screenAvailable === true ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleScreen,\n          style: {\n            color: \"white\"\n          },\n          children: screen === true ? /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: newMessages,\n          max: 999,\n          color: \"orange\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setModal(!showModal),\n            style: {\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 33\n            }, this), \"                        \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        className: styles.meetUserVideo,\n        ref: localVideoref,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.conferenceView,\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            \"data-socket\": video.socketId,\n            ref: ref => {\n              if (ref && video.stream) {\n                ref.srcObject = video.stream;\n              }\n            },\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 33\n          }, this)\n        }, video.socketId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoMeetComponent, \"+4/i87zaJkIzCV//TbJUsM7FgGE=\", true);\n_c = VideoMeetComponent;\nvar _c;\n$RefreshReg$(_c, \"VideoMeetComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Badge","IconButton","TextField","Button","VideocamIcon","VideocamOffIcon","styles","CallEndIcon","MicIcon","MicOffIcon","ScreenShareIcon","StopScreenShareIcon","ChatIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","server","server_url","connections","peerConfigConnections","VideoMeetComponent","_s","socketRef","socketIdRef","localVideoref","videoAvailable","setVideoAvailable","audioAvailable","setAudioAvailable","video","setVideo","audio","setAudio","useStatetrue","screen","setScreen","showModal","setModal","screenAvailable","setScreenAvailable","messages","setMessages","message","setMessage","newMessages","setNewMessages","askForUsername","setAskForUsername","username","setUsername","videoRef","videos","setVideos","console","log","getPermissions","getDislayMedia","navigator","mediaDevices","getDisplayMedia","then","getDislayMediaSuccess","stream","catch","e","videoPermission","getUserMedia","audioPermission","userMediaStream","window","localStream","current","srcObject","error","undefined","getMedia","connectToSocketServer","getUserMediaSuccess","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","localDescription","onended","tracks","blackSilence","args","MediaStream","black","silence","gotMessageFromServer","fromId","signal","parse","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","connect","secure","on","roomId","addMessage","filter","socketId","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","ontrack","streams","prevVideos","existingVideo","find","v","addTrack","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","handleVideo","prev","handleAudio","handleScreen","handleEndCall","location","href","openChat","closeChat","handleMessage","target","value","data","sender","socketIdSender","prevMessages","prevNewMessages","sendMessage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","variant","onClick","ref","autoPlay","muted","meetVideoContainer","chatRoom","chatContainer","style","color","chattingDisplay","backgroundColor","length","map","item","index","marginBottom","fontWeight","chattingArea","gap","buttonContainers","badgeContent","max","meetUserVideo","conferenceView","_c","$RefreshReg$"],"sources":["C:/Users/satwi/Documents/zoomclone/frontened/src/pages/VideoMeet.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport io from \"socket.io-client\";\r\nimport { Badge, IconButton, TextField } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff'\r\nimport styles from \"../styles/videoComponent.module.css\";\r\nimport CallEndIcon from '@mui/icons-material/CallEnd'\r\nimport MicIcon from '@mui/icons-material/Mic'\r\nimport MicOffIcon from '@mui/icons-material/MicOff'\r\nimport ScreenShareIcon from '@mui/icons-material/ScreenShare';\r\nimport StopScreenShareIcon from '@mui/icons-material/StopScreenShare'\r\nimport ChatIcon from '@mui/icons-material/Chat'\r\nconst server='http://localhost:8080';\r\n\r\nconst server_url = server;\r\n\r\nvar connections = {};\r\n\r\nconst peerConfigConnections = {\r\n    \"iceServers\": [\r\n        { \"urls\": \"stun:stun.l.google.com:19302\" }\r\n    ]\r\n}\r\n\r\nexport default function VideoMeetComponent() {\r\n\r\n    var socketRef = useRef();\r\n    let socketIdRef = useRef();\r\n\r\n    let localVideoref = useRef();\r\n\r\n    let [videoAvailable, setVideoAvailable] = useState(true);\r\n\r\n    let [audioAvailable, setAudioAvailable] = useState(true);\r\n\r\n    let [video, setVideo] = useState([]);\r\n\r\n    let [audio, setAudio] = useStatetrue();\r\n\r\n    let [screen, setScreen] = useState();\r\n\r\n    let [showModal, setModal] = useState(true);\r\n\r\n    let [screenAvailable, setScreenAvailable] = useState();\r\n\r\n    let [messages, setMessages] = useState([])\r\n\r\n    let [message, setMessage] = useState(\"\");\r\n\r\n    let [newMessages, setNewMessages] = useState(3);\r\n\r\n    let [askForUsername, setAskForUsername] = useState(true);\r\n\r\n    let [username, setUsername] = useState(\"\");\r\n\r\n    const videoRef = useRef([])\r\n\r\n    let [videos, setVideos] = useState([])\r\n\r\n    // TODO\r\n    // if(isChrome() === false) {\r\n\r\n\r\n    // }\r\n\r\n    useEffect(() => {\r\n        console.log(\"HELLO\")\r\n        getPermissions();\r\n\r\n    })\r\n\r\n    let getDislayMedia = () => {\r\n        if (screen) {\r\n            if (navigator.mediaDevices.getDisplayMedia) {\r\n                navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\r\n                    .then(getDislayMediaSuccess)\r\n                    .then((stream) => { })\r\n                    .catch((e) => console.log(e))\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPermissions = async () => {\r\n        try {\r\n            const videoPermission = await navigator.mediaDevices.getUserMedia({ video: true });\r\n            if (videoPermission) {\r\n                setVideoAvailable(true);\r\n                console.log('Video permission granted');\r\n            } else {\r\n                setVideoAvailable(false);\r\n                console.log('Video permission denied');\r\n            }\r\n\r\n            const audioPermission = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (audioPermission) {\r\n                setAudioAvailable(true);\r\n                console.log('Audio permission granted');\r\n            } else {\r\n                setAudioAvailable(false);\r\n                console.log('Audio permission denied');\r\n            }\r\n\r\n            if (navigator.mediaDevices.getDisplayMedia) {\r\n                setScreenAvailable(true);\r\n            } else {\r\n                setScreenAvailable(false);\r\n            }\r\n\r\n            if (videoAvailable || audioAvailable) {\r\n                const userMediaStream = await navigator.mediaDevices.getUserMedia({ video: videoAvailable, audio: audioAvailable });\r\n                if (userMediaStream) {\r\n                    window.localStream = userMediaStream;\r\n                    if (localVideoref.current) {\r\n                        localVideoref.current.srcObject = userMediaStream;\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (video !== undefined && audio !== undefined) {\r\n            getUserMedia();\r\n            console.log(\"SET STATE HAS \", video, audio);\r\n\r\n        }\r\n\r\n\r\n    }, [video, audio])\r\n    let getMedia = () => {\r\n        setVideo(videoAvailable);\r\n        setAudio(audioAvailable);\r\n        connectToSocketServer();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    let getUserMediaSuccess = (stream) => {\r\n        try {\r\n            window.localStream.getTracks().forEach(track => track.stop())\r\n        } catch (e) { console.log(e) }\r\n\r\n        window.localStream = stream\r\n        localVideoref.current.srcObject = stream\r\n\r\n        for (let id in connections) {\r\n            if (id === socketIdRef.current) continue\r\n\r\n            connections[id].addStream(window.localStream)\r\n\r\n            connections[id].createOffer().then((description) => {\r\n                console.log(description)\r\n                connections[id].setLocalDescription(description)\r\n                    .then(() => {\r\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            })\r\n        }\r\n\r\n        stream.getTracks().forEach(track => track.onended = () => {\r\n            setVideo(false);\r\n            setAudio(false);\r\n\r\n            try {\r\n                let tracks = localVideoref.current.srcObject.getTracks()\r\n                tracks.forEach(track => track.stop())\r\n            } catch (e) { console.log(e) }\r\n\r\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\r\n            window.localStream = blackSilence()\r\n            localVideoref.current.srcObject = window.localStream\r\n\r\n            for (let id in connections) {\r\n                connections[id].addStream(window.localStream)\r\n\r\n                connections[id].createOffer().then((description) => {\r\n                    connections[id].setLocalDescription(description)\r\n                        .then(() => {\r\n                            socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n                        })\r\n                        .catch(e => console.log(e))\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    let getUserMedia = () => {\r\n        if ((video && videoAvailable) || (audio && audioAvailable)) {\r\n            navigator.mediaDevices.getUserMedia({ video: video, audio: audio })\r\n                .then(getUserMediaSuccess)\r\n                .then((stream) => { })\r\n                .catch((e) => console.log(e))\r\n        } else {\r\n            try {\r\n                let tracks = localVideoref.current.srcObject.getTracks()\r\n                tracks.forEach(track => track.stop())\r\n            } catch (e) { }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    let getDislayMediaSuccess = (stream) => {\r\n        console.log(\"HERE\")\r\n        try {\r\n            window.localStream.getTracks().forEach(track => track.stop())\r\n        } catch (e) { console.log(e) }\r\n\r\n        window.localStream = stream\r\n        localVideoref.current.srcObject = stream\r\n\r\n        for (let id in connections) {\r\n            if (id === socketIdRef.current) continue\r\n\r\n            connections[id].addStream(window.localStream)\r\n\r\n            connections[id].createOffer().then((description) => {\r\n                connections[id].setLocalDescription(description)\r\n                    .then(() => {\r\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            })\r\n        }\r\n\r\n        stream.getTracks().forEach(track => track.onended = () => {\r\n            setScreen(false)\r\n\r\n            try {\r\n                let tracks = localVideoref.current.srcObject.getTracks()\r\n                tracks.forEach(track => track.stop())\r\n            } catch (e) { console.log(e) }\r\n\r\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\r\n            window.localStream = blackSilence()\r\n            localVideoref.current.srcObject = window.localStream\r\n\r\n            getUserMedia()\r\n\r\n        })\r\n    }\r\n\r\n    let gotMessageFromServer = (fromId, message) => {\r\n        var signal = JSON.parse(message)\r\n\r\n        if (fromId !== socketIdRef.current) {\r\n            if (signal.sdp) {\r\n                connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\r\n                    if (signal.sdp.type === 'offer') {\r\n                        connections[fromId].createAnswer().then((description) => {\r\n                            connections[fromId].setLocalDescription(description).then(() => {\r\n                                socketRef.current.emit('signal', fromId, JSON.stringify({ 'sdp': connections[fromId].localDescription }))\r\n                            }).catch(e => console.log(e))\r\n                        }).catch(e => console.log(e))\r\n                    }\r\n                }).catch(e => console.log(e))\r\n            }\r\n\r\n            if (signal.ice) {\r\n                connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    let connectToSocketServer = () => {\r\n        socketRef.current = io.connect(server_url, { secure: false });\r\n    \r\n        socketRef.current.on('signal', gotMessageFromServer);\r\n    \r\n        socketRef.current.on('connect', () => {\r\n            const roomId = \"test-room\"; // Ensure all users use the same room\r\n            console.log(`Joining room: ${roomId}`);\r\n            socketRef.current.emit('join-call', roomId);\r\n            socketIdRef.current = socketRef.current.id;\r\n    \r\n            socketRef.current.on('chat-message', addMessage);\r\n    \r\n            socketRef.current.on('user-left', (id) => {\r\n                console.log(`User ${id} left`);\r\n                setVideos((videos) => videos.filter((video) => video.socketId !== id));\r\n            });\r\n    \r\n            socketRef.current.on('user-joined', (id, clients) => {\r\n                console.log(`User joined: ${id}, Existing clients: `, clients);\r\n    \r\n                clients.forEach((socketListId) => {\r\n                    if (!connections[socketListId]) {\r\n                        connections[socketListId] = new RTCPeerConnection(peerConfigConnections);\r\n                        \r\n                        // ICE Candidate Handling\r\n                        connections[socketListId].onicecandidate = (event) => {\r\n                            if (event.candidate) {\r\n                                console.log(`Sending ICE candidate to ${socketListId}`);\r\n                                socketRef.current.emit('signal', socketListId, JSON.stringify({ 'ice': event.candidate }));\r\n                            }\r\n                        };\r\n    \r\n                        // Handle incoming media stream (Replaces `onaddstream`)\r\n                        connections[socketListId].ontrack = (event) => {\r\n                            console.log(`Receiving track from: ${socketListId}`);\r\n    \r\n                            let stream = event.streams[0];\r\n                            setVideos((prevVideos) => {\r\n                                const existingVideo = prevVideos.find((v) => v.socketId === socketListId);\r\n                                if (!existingVideo) {\r\n                                    return [...prevVideos, { socketId: socketListId, stream }];\r\n                                }\r\n                                return prevVideos;\r\n                            });\r\n                        };\r\n    \r\n                        // Add local stream to connection\r\n                        if (window.localStream) {\r\n                            window.localStream.getTracks().forEach(track => {\r\n                                connections[socketListId].addTrack(track, window.localStream);\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n    \r\n                if (id === socketIdRef.current) {\r\n                    for (let id2 in connections) {\r\n                        if (id2 === socketIdRef.current) continue;\r\n    \r\n                        try {\r\n                            window.localStream.getTracks().forEach(track => {\r\n                                connections[id2].addTrack(track, window.localStream);\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error adding local stream:\", e);\r\n                        }\r\n    \r\n                        // Create and send offer\r\n                        connections[id2].createOffer().then((description) => {\r\n                            connections[id2].setLocalDescription(description)\r\n                                .then(() => {\r\n                                    console.log(`Sending SDP offer to ${id2}`);\r\n                                    socketRef.current.emit('signal', id2, JSON.stringify({ 'sdp': connections[id2].localDescription }));\r\n                                }).catch(e => console.error(e));\r\n                        }).catch(e => console.error(e));\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    \r\n    let silence = () => {\r\n        let ctx = new AudioContext()\r\n        let oscillator = ctx.createOscillator()\r\n        let dst = oscillator.connect(ctx.createMediaStreamDestination())\r\n        oscillator.start()\r\n        ctx.resume()\r\n        return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false })\r\n    }\r\n    let black = ({ width = 640, height = 480 } = {}) => {\r\n        let canvas = Object.assign(document.createElement(\"canvas\"), { width, height })\r\n        canvas.getContext('2d').fillRect(0, 0, width, height)\r\n        let stream = canvas.captureStream()\r\n        return Object.assign(stream.getVideoTracks()[0], { enabled: false })\r\n    }\r\n\r\n    const handleVideo = () => {\r\n        if (stream) {\r\n            stream.getVideoTracks().forEach(track => {\r\n                track.enabled = !track.enabled;\r\n            });\r\n            setVideo((prev) => !prev);\r\n        }\r\n    };\r\n    \r\n    const handleAudio = () => {\r\n        if (stream) {\r\n            stream.getAudioTracks().forEach(track => {\r\n                track.enabled = !track.enabled;\r\n            });\r\n            setAudio((prev) => !prev);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (screen !== undefined) {\r\n            getDislayMedia();\r\n        }\r\n    }, [screen])\r\n    let handleScreen = () => {\r\n        setScreen(!screen);\r\n    }\r\n\r\n    let handleEndCall = () => {\r\n        try {\r\n            let tracks = localVideoref.current.srcObject.getTracks()\r\n            tracks.forEach(track => track.stop())\r\n        } catch (e) { }\r\n        window.location.href = \"/\"\r\n    }\r\n\r\n    let openChat = () => {\r\n        setModal(true);\r\n        setNewMessages(0);\r\n    }\r\n    let closeChat = () => {\r\n        setModal(false);\r\n    }\r\n    let handleMessage = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const addMessage = (data, sender, socketIdSender) => {\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { sender: sender, data: data }\r\n        ]);\r\n        if (socketIdSender !== socketIdRef.current) {\r\n            setNewMessages((prevNewMessages) => prevNewMessages + 1);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    let sendMessage = () => {\r\n        console.log(socketRef.current);\r\n        console.log(\"Sending message:\", message);\r\n        socketRef.current.emit('chat-message', message, username)\r\n        setMessage(\"\");\r\n\r\n        // this.setState({ message: \"\", sender: username })\r\n    }\r\n\r\n    \r\n    let connect = () => {\r\n        setAskForUsername(false);\r\n        getMedia();\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {askForUsername === true ?\r\n\r\n                <div className='meetingContainer'>\r\n\r\n\r\n                    <h2>Enter into Lobby </h2>\r\n                    <TextField id=\"outlined-basic\" label=\"Username\" value={username} onChange={e => setUsername(e.target.value)} variant=\"outlined\" />\r\n                    <Button variant=\"contained\" onClick={connect}>Connect</Button>\r\n\r\n\r\n                    <div>\r\n                        <video ref={localVideoref} autoPlay muted></video>\r\n                    </div>\r\n\r\n                </div> :\r\n\r\n\r\n                <div className={styles.meetVideoContainer}>\r\n                   \r\n\r\n\r\n                    {showModal ? <div className={styles.chatRoom}>\r\n                    \r\n\r\n                        <div className={styles.chatContainer}>\r\n                            <h1 style={{color:\"black\"}}>Chat</h1>\r\n\r\n                            <div className={styles.chattingDisplay} style={{color:\"black\",backgroundColor:\"white\"}}>\r\n\r\n                                {messages.length !== 0 ? messages.map((item, index) => {\r\n\r\n                                    console.log(messages)\r\n                                    return (\r\n                                        <div style={{ marginBottom: \"20px\" ,color:\"black\"}} key={index}>\r\n                                            <p style={{ fontWeight: \"bold\" ,color:\"black\"}}>{item.sender}</p>\r\n                                            <p style={{color:\"black\"}}>{item.data}</p>\r\n                                        </div>\r\n                                    )\r\n                                }) : <p style={{color:\"black\"}}>No Messages Yet</p>}\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className={styles.chattingArea} style={{ gap: \"5px\"}}>\r\n                                <TextField value={message} onChange={(e) => setMessage(e.target.value)} id=\"outlined-basic\" label=\"Enter Your chat\" variant=\"outlined\" style={{color:\"black\"}}/>\r\n                                <Button variant='contained' onClick={sendMessage}>Send</Button>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div> : <></>}\r\n\r\n\r\n                    <div className={styles.buttonContainers}>\r\n                        <IconButton onClick={handleVideo} style={{ color: \"white\" }}>\r\n                            {(video === true) ? <VideocamIcon /> : <VideocamOffIcon />}\r\n                        </IconButton>\r\n                        <IconButton onClick={handleEndCall} style={{ color: \"red\" }}>\r\n                            <CallEndIcon  />\r\n                        </IconButton>\r\n                        <IconButton onClick={handleAudio} style={{ color: \"white\" }}>\r\n                            {audio === true ? <MicIcon /> : <MicOffIcon />}\r\n                        </IconButton>\r\n\r\n                        {screenAvailable === true ?\r\n                            <IconButton onClick={handleScreen} style={{ color: \"white\" }}>\r\n                                {screen === true ? <ScreenShareIcon /> : <StopScreenShareIcon />}\r\n                            </IconButton> : <></>}\r\n\r\n                        <Badge badgeContent={newMessages} max={999} color='orange'>\r\n                            <IconButton onClick={() => setModal(!showModal)} style={{ color: \"white\" }}>\r\n                                <ChatIcon />                        </IconButton>\r\n                        </Badge>\r\n\r\n                    </div>\r\n\r\n\r\n                    <video className={styles.meetUserVideo} ref={localVideoref} autoPlay muted></video>\r\n\r\n                    <div className={styles.conferenceView}>\r\n                        {videos.map((video) => (\r\n                            <div key={video.socketId}>\r\n                                <video\r\n\r\n                                    data-socket={video.socketId}\r\n                                    ref={ref => {\r\n                                        if (ref && video.stream) {\r\n                                            ref.srcObject = video.stream;\r\n                                        }\r\n                                    }}\r\n                                    autoPlay\r\n                                >\r\n                                </video>\r\n                            </div>\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}